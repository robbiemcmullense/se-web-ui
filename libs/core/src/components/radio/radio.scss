$root-paddings: (
  small: $spacing-small,
  medium: $spacing,
  large: $spacing-large,
);

:host {
  @include align-items(center);
  display: flex;
}

@each $p-name, $p-value in $root-paddings {
  :host(.p-#{$p-name}) {
    padding: $p-value;
  }
}

input {
  @include visually-hidden();
}

.radio-label {
  @include display-flex();
  @include align-items(flex-start);
  @include typology("small");
  position: relative;
  margin: 0;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;

  input {
    @include visually-hidden();
  }

  &.label-left .checkdot {
    left: auto;
  }

  &[data-disabled] {
    .checkdot {
      opacity: 0.5;
    }
  }
}

.label-wrap {
  // font-weight: 400;
  @include ellipsis();
  white-space: break-spaces;
  word-break: break-word;
  line-height: 20px;

  .label-left & {
    margin-right: $spacing;
  }

  .label-right & {
    margin-left: $spacing;
  }
}

.label-right {
  flex-flow: row-reverse;
  justify-content: flex-end;
}

.container {
  position: relative;
}

button {
  // box-sizing: border-box;
  margin: 0;
  padding: 0;
  outline: none;
  cursor: pointer;
  // overflow: visible;
  // background: transparent;
  // text-decoration: none;
  /* inherit font & color from ancestor */
  height: 16px;
  width: 16px;
  @include background-color("background-alternative");
  border: 1px solid;
  @include border-color("border");
  border-radius: 50%;

  &:focus {
    @include interactive-element-outline(2px, 0);
  }

  &.checked {
    border: 4px solid;
    @include border-color("primary");
    &.secondary {
      @include border-color("secondary");
    }
  }
}

.disabled {
  cursor: default;
  opacity: 0.5;
  pointer-events: none;
}

.required {
  @include color("error");
  padding-left: 3px;
}
