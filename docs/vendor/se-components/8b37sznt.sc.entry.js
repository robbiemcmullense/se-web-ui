const e=window.SeComponents.h;class t{constructor(){this.mode="checkbox",this.disabled=!1,this.value=[]}buttonClickedHandler(e){let t=e.detail,s=this.value.indexOf(t.value)>-1;"radio"==this.mode?(this.value=[],this.value=[...this.value,t.value],this.el.querySelectorAll("se-button").forEach(e=>{e.setActive(!1)}),t.setActive(!0)):"checkbox"!=this.mode||s?this.value.splice(this.value.indexOf(t.value),1):this.value=[...this.value,t.value],this.change.emit(this.value)}render(){return this.el.querySelectorAll("se-button").forEach(e=>{e.setGrouped(),this.disabled&&e.setDisabled(!0),this.color&&e.setColor(this.color)}),e("slot",null)}static get is(){return"se-buttons"}static get encapsulation(){return"shadow"}static get properties(){return{color:{type:String,attr:"color"},disabled:{type:Boolean,attr:"disabled",mutable:!0},el:{elementRef:!0},mode:{type:String,attr:"mode"},value:{state:!0}}}static get events(){return[{name:"change",method:"change",bubbles:!0,cancelable:!0,composed:!0}]}static get listeners(){return[{name:"clicked",method:"buttonClickedHandler"}]}static get style(){return".sc-se-buttons-h{font-size:0}"}}export{t as SeButtons};