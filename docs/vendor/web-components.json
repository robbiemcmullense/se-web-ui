{
  "tags": [
    {
      "label": "se-app",
      "description": "",
      "attributes": []
    },
    {
      "label": "se-button",
      "description": "",
      "attributes": [
        {
          "label": "color",
          "description": "Optional property that defines the background color of the button.\n`primary` is a green color.\n`accent` is a blue color.\n`warn` is an orange color.\n`error` is a red color.",
          "required": false
        },
        {
          "label": "disabled",
          "description": "Optional property that defines if the button is disabled.  Set to `false` by default.",
          "required": false
        },
        {
          "label": "icon",
          "description": "Optional property that determines if your button includes an icon.",
          "required": false
        },
        {
          "label": "mode",
          "description": "Defines the visual appearance of the button.\n`flat` is the default mode, which includes a gray background.\n`raised` adds a box shadow to the button.\n`outline` adds a border to the button.\n`text` mode has no border or background color.\n`login` and `signup` modes are specific for \"Login\" and \"Sign Up\" buttons in your application.",
          "required": false
        },
        {
          "label": "value",
          "description": "Optional property that defines the value of your button, which gets passed to the parent component when clicking the button.",
          "required": false
        }
      ]
    },
    {
      "label": "se-buttons",
      "description": "",
      "attributes": [
        {
          "label": "color",
          "description": "Optional property that defines the background color of each button in the group.\n`primary` is a green color.\n`accent` is a blue color.\n`warn` is an orange color.\n`error` is a red color.",
          "required": false
        },
        {
          "label": "disabled",
          "description": "Optional property that defines if the button is disabled.  Set to `false` by default.",
          "required": false
        },
        {
          "label": "mode",
          "description": "Defines the functionality of your button group.\n`checkbox` is the default option, where all buttons in the group can be selected.\n`radio` mode indicates that only one button in the group can be selected at a time.",
          "required": false
        }
      ]
    },
    {
      "label": "se-checkbox",
      "description": "",
      "attributes": [
        {
          "label": "color",
          "description": "Defines the background color of the button.\n`primary` is a green color and is the default value.\n`accent` is a blue color.\n`warn` is an orange color.\n`error` is a red color.",
          "required": false
        },
        {
          "label": "disabled",
          "description": "Optional property that defines if the checkbox is disabled.  Set to `false` by default.",
          "required": false
        },
        {
          "label": "value",
          "description": "The value you want to pass to the parent component when the checkbox is checked.",
          "required": false
        }
      ]
    },
    {
      "label": "se-chip",
      "description": "",
      "attributes": [
        {
          "label": "can-close",
          "description": "Indicates whether or not the chip has a close button.  Set to `true` by default.",
          "required": false
        },
        {
          "label": "color",
          "description": "Optional property that defines the background color of the button.\n`primary` is a green color.\n`accent` is a blue color.\n`warn` is an orange color.\n`error` is a red color.\n`light` is a gray color.",
          "required": false
        },
        {
          "label": "value",
          "description": "The text you want to display in your chip.",
          "required": false
        }
      ]
    },
    {
      "label": "se-container",
      "description": "",
      "attributes": [
        {
          "label": "mode",
          "description": "Defines the inner apparance of a container.\n`widget` Add a small spacing all around the container so all widgets are spaced with the same distance.\n`fill` Default. Take the full space of the container.\n`centered` center the container so the content does no exceed a max width.",
          "required": false
        },
        {
          "label": "position",
          "description": "In specific case, it can be necessary to define the container with an absolute position (inside an angular router-container ). Most of the time, the default position will work perfectly with flex box.\n`relative` Default. Perfect to use with flex content.\n`absolute` Help in specific cases. Make sure you know that you are doing.",
          "required": false
        }
      ]
    },
    {
      "label": "se-divider",
      "description": "",
      "attributes": [
        {
          "label": "color",
          "description": "",
          "required": false
        },
        {
          "label": "mode",
          "description": "",
          "required": false
        }
      ]
    },
    {
      "label": "se-header",
      "description": "",
      "attributes": [
        {
          "label": "app-title",
          "description": "Title of the application",
          "required": false
        },
        {
          "label": "domain",
          "description": "domain define the domain of the application. By default, the domain is `ecostruxure`. If `none`, then no domain will be displayed",
          "required": false
        },
        {
          "label": "project",
          "description": "domain define project name (usefull for small project) that can be used for versioning as well. It will be placed at the right side of the title.",
          "required": false
        }
      ]
    },
    {
      "label": "se-icon-ecostruxure",
      "description": "",
      "attributes": []
    },
    {
      "label": "se-icon-schneider",
      "description": "",
      "attributes": []
    },
    {
      "label": "se-label",
      "description": "",
      "attributes": [
        {
          "label": "required",
          "description": "When the label is part of a form field, this attribute defines if the input is required, adding a red asterisk next to the label.",
          "required": false
        },
        {
          "label": "value",
          "description": "Defines the text that you want your label to display.",
          "required": false
        }
      ]
    },
    {
      "label": "se-link",
      "description": "",
      "attributes": [
        {
          "label": "disabled",
          "description": "Determines whether or not the link is disabled.",
          "required": false
        },
        {
          "label": "link",
          "description": "Defines the text to be displayed in your link.",
          "required": false
        },
        {
          "label": "type",
          "description": "Default setting is `internal`.\nSet to `external` adds an underline to the link, and opens the link in a new web browser tab.",
          "required": false
        },
        {
          "label": "url",
          "description": "Defines the url the user should get redirected to when clicking on the link.",
          "required": false
        }
      ]
    },
    {
      "label": "se-list-item",
      "description": "",
      "attributes": [
        {
          "label": "item-title",
          "description": "Define if the list element should be selected or not",
          "required": false
        },
        {
          "label": "mode",
          "description": "Define the them of the list. This them will be handled and modified by the parent element",
          "required": false
        },
        {
          "label": "selected",
          "description": "Define if the list element should be selected or not",
          "required": false
        }
      ]
    },
    {
      "label": "se-list",
      "description": "",
      "attributes": [
        {
          "label": "mode",
          "description": "Define the style of the list",
          "required": false
        }
      ]
    },
    {
      "label": "se-navbar",
      "description": "| Slot    | Description                                                                                           |\n| ------- | ----------------------------------------------------------------------------------------------------- |\n| none    | Slot with no name will be positioned to the start of the element (left)                               |\n| `start` | Positions th the `left` of the content. the start element will be darker than the rest of the element |\n| `end`   | Positions to the `right` of the content.                                                              |",
      "attributes": [
        {
          "label": "color",
          "description": "",
          "required": false
        }
      ]
    },
    {
      "label": "se-radio-on-off",
      "description": "",
      "attributes": [
        {
          "label": "disabled",
          "description": "Optional property that defines if the radio on/off switch is disabled.  Set to `false` by default.",
          "required": false
        },
        {
          "label": "mode",
          "description": "Defines the visual appearance of the on/off radio switch.\n`default` is the default mode.\nUse `header` if the on/off radio switch is within a header element to reduce its visual height.",
          "required": false
        },
        {
          "label": "text-off",
          "description": "Defines the text the user will see for the \"off\" or \"inactive\" part of the radio switch.",
          "required": false
        },
        {
          "label": "text-on",
          "description": "Defines the text the user will see for the \"on\" or \"active\" part of the radio switch.",
          "required": false
        }
      ]
    },
    {
      "label": "se-sidenav-item",
      "description": "",
      "attributes": [
        {
          "label": "active",
          "description": "Defines if the tab is active or not.",
          "required": false
        },
        {
          "label": "item-title",
          "description": "Define the title of the tab",
          "required": false
        }
      ]
    },
    {
      "label": "se-sidenav",
      "description": "",
      "attributes": []
    },
    {
      "label": "se-widget-content",
      "description": "",
      "attributes": [
        {
          "label": "mode",
          "description": "",
          "required": false
        }
      ]
    },
    {
      "label": "se-widget-footer",
      "description": "| Slot  | Description                                                             |\n| ----- | ----------------------------------------------------------------------- |\n| none  | Slot with no name will be positioned to the start of the element (left) |\n| `end` | Positions to the `right` of the content.                                |",
      "attributes": []
    },
    {
      "label": "se-widget-header",
      "description": "| Slot  | Description                                                             |\n| ----- | ----------------------------------------------------------------------- |\n| none  | Slot with no name will be positioned to the start of the element (left) |\n| `end` | Positions to the `right` of the content.                                |",
      "attributes": []
    },
    {
      "label": "se-widget",
      "description": "",
      "attributes": [
        {
          "label": "mode",
          "description": "",
          "required": false
        },
        {
          "label": "width",
          "description": "",
          "required": false
        }
      ]
    }
  ]
}